#!/usr/bin/ruby
# Copyright © 2014-2018, Chris Warrick.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions, and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions, and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the author of this software nor the names of
#    contributors to this software may be used to endorse or promote
#    products derived from this software without specific prior written
#    consent.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

trap("SIGINT") do
    puts
    exit 130
end

branchesl = `git branch --list --color=never`
if $?.exitstatus != 0
    exit $?.exitstatus
end

def header(f)
    g = "-" * f.length
    if f != ""
        puts "\e[36;1mChoose a Branch (Filter: #{f})\e[0m"
        puts "\e[36;1m-------------------------#{g}-\e[0m\n\n"
    else
        puts "\e[36;1mChoose a Branch\e[0m"
        puts "\e[36;1m---------------\e[0m\n\n"
    end
end

header('')

branchesl = branchesl.split("\n")
branches = []
for b in branchesl
    branch = b.slice(2, b.length)
    if b[0] == "*"
        current_branch = branch
    end
    branches.push(branch)
end

format = "\e[1m%%%ii.\e[0m %%s" % branches.length.to_s.length
# breakdown:
# %%         literal %
#   %i       integer
#     i. %%s literal i. %s%s
# format % 2 => %2i. %s

branches.each_with_index do |b, i|
    if current_branch == b
        b = "\e[32;1m#{b}\e[0m"
    end
    puts format % [i + 1, b]
end

puts

def checkout(b)
    system("git checkout #{b}")
    exit $?.exitstatus
end

while true
    puts "\e[36mnumber → select    M → master    /QUERY → filter\e[0m"
    print "\e[36;1m>\e[0m "

    begin
        query = gets.chomp
    rescue NoMethodError
        puts # let's be nice to the terminal
        exit 2
    end

    if query == "M"
        checkout("master")
    elsif query[0] == "/"
        s = query.slice(1, query.length)
        header(s)

        branches.each_with_index do |b, i|
            if current_branch == b
                bf = "\e[32;1m#{b}\e[0m"
            else
                bf = b
            end
            if s and b.include? s
                puts format % [i + 1, bf]
            end
        end
    elsif query[0] == "q"
        exit 0
    else
        number = query.to_i
        if number == 0
            # We provide numbers starting at 1.  0 is also the “error code” of to_i.
            puts "\e[31;1mError:\e[0m no number specified!\n\n"
        else
            b = branches[number - 1]
            checkout(b)
        end
    end
end
